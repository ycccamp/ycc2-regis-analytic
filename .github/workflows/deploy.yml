name: Deployment

on:
  push:
    branches:
      - master

jobs:

  test:
    runs-on: macOS-latest
    strategy:
      matrix:
        node-version: [10.x]
    steps:
    - uses: actions/checkout@v1
    - name: "Init: Summon NodeJS"
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: "Init: Install yarn"
      run: |
        curl -o- -L https://yarnpkg.com/install.sh | bash
    - name: "Cache: node_modules"
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.OS }}-node-${{ env.cache-name }}-
          ${{ runner.OS }}-node-
    - name: "Init: Install dependencies"
      run: |
          yarn install
          cd ./functions
          yarn install
          cd ..
    - name: "Test: Type checking"
      run: |
        yarn test:types
    - name: "Test: Code linting"
      run: |
        yarn test:lint
  deploy:
    needs: test
    runs-on: macOS-latest
    strategy:
      matrix:
        node-version: [10.x]
    steps:
      - uses: actions/checkout@v1
      - name: 'Init: Summon NodeJS'
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: "Cache: node_modules"
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ env.cache-name }}-
            ${{ runner.OS }}-node-
      - name: 'Init: Install yarn'
        run: |
          curl -o- -L https://yarnpkg.com/install.sh | bash
      - name: 'Init: Install dependencies'
        run: |
          yarn install
          cd ./functions
          yarn install
          cd ..
      - name: "Build: Build firebase functions"
        run: |
          yarn build:functions
      - name: "Build: Build static Next site"
        env:
          FULLSTORY: ${{ secrets.FULLSTORY }}
        run: |
          yarn build
          yarn export
      - name: "Deploy: Upload to Firebase"
        env:
          FIREBASE_DEPLOY_KEY: ${{ secrets.FIREBASE_DEPLOY_KEY }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        run: |
          yarn firebase deploy -m "Automatic deployment from GitHub Actions" --non-interactive --token $FIREBASE_DEPLOY_KEY --project $FIREBASE_PROJECT_ID